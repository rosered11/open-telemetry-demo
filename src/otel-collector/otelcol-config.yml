# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: otel-collector:4317
      http:
        endpoint: otel-collector:4318
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"
exporters:
  debug:
  otlp:
    endpoint: "jaeger:4317"
    tls:
      insecure: true
  otlphttp/prometheus:
    endpoint: "http://prometheus:9090/api/v1/otlp"
    tls:
      insecure: true
  elasticsearch:
    endpoint: http://elasticsearch:9200
    # tls:
    #   insecure: true
    # logs_index: otel-logs
    
    # index_date_layout: "2006-01-02"
    # logs_index_time_format: "yyyy-MM-dd"
    # index: otel_logs_index
  # elasticsearch/logs:
  #   endpoints: ["http://elasticsearch:9200"]
  #   logs_index: otel-logs-write
  #   mapping:
  #     mode: otel
  #   sending_queue:
  #     enabled: true
  #     num_consumers: 5
  #     queue_size: 1000
processors:
  batch:
  transform:
    error_mode: ignore
    trace_statements:
      - context: span
        statements:
          # could be removed when https://github.com/vercel/next.js/pull/64852 is fixed upstream
          - replace_pattern(name, "\\?.*", "")
          - replace_match(name, "GET /api/products/*", "GET /api/products/{productId}")

connectors:
  spanmetrics:

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [transform, batch]
      exporters: [otlp, debug, spanmetrics]
    metrics:
      receivers: [otlp, spanmetrics]
      processors: [batch]
      exporters: [otlphttp/prometheus, debug]
    logs:
      receivers: [otlp]
      exporters: [elasticsearch, debug]
    # logs:
    #   receivers: [otlp]
    #   processors: [batch]
    #   exporters: [opensearch, debug]
  telemetry:
    metrics:
      level: detailed
      readers:
        - periodic:
            interval: 10000
            timeout: 5000
            exporter:
              otlp:
                protocol: http/protobuf
                endpoint: otel-collector:4318
